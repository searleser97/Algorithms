\BOOKMARK [1][-]{section*.2}{BITs Manipulation}{}% 1
\BOOKMARK [2][-]{section*.3}{Count Bits}{section*.2}% 2
\BOOKMARK [2][-]{section*.4}{Count Leading Zeroes}{section*.2}% 3
\BOOKMARK [2][-]{section*.5}{Count Set Bits}{section*.2}% 4
\BOOKMARK [2][-]{section*.6}{Count Trailing Zeroes}{section*.2}% 5
\BOOKMARK [2][-]{section*.7}{Divide By 2}{section*.2}% 6
\BOOKMARK [2][-]{section*.8}{Get Last Set Bit}{section*.2}% 7
\BOOKMARK [2][-]{section*.9}{Is Even}{section*.2}% 8
\BOOKMARK [2][-]{section*.10}{Is i-th Bit Set}{section*.2}% 9
\BOOKMARK [2][-]{section*.11}{Is Odd}{section*.2}% 10
\BOOKMARK [2][-]{section*.12}{Is Power Of 2}{section*.2}% 11
\BOOKMARK [2][-]{section*.13}{Log2}{section*.2}% 12
\BOOKMARK [2][-]{section*.14}{Multiply By 2}{section*.2}% 13
\BOOKMARK [2][-]{section*.15}{One's Complement}{section*.2}% 14
\BOOKMARK [2][-]{section*.16}{Parity Check}{section*.2}% 15
\BOOKMARK [2][-]{section*.17}{Set i-th Bit}{section*.2}% 16
\BOOKMARK [2][-]{section*.18}{Swap Integer Variables}{section*.2}% 17
\BOOKMARK [2][-]{section*.19}{Toggle i-th Bit}{section*.2}% 18
\BOOKMARK [2][-]{section*.20}{Two's Complement}{section*.2}% 19
\BOOKMARK [2][-]{section*.21}{Unset i-th Bit}{section*.2}% 20
\BOOKMARK [1][-]{section*.22}{Coding Resources}{}% 21
\BOOKMARK [2][-]{section*.23}{C++}{section*.22}% 22
\BOOKMARK [3][-]{section*.24}{Decimal Precision}{section*.23}% 23
\BOOKMARK [3][-]{section*.25}{Include All Libraries}{section*.23}% 24
\BOOKMARK [3][-]{section*.26}{Int To Binary}{section*.23}% 25
\BOOKMARK [3][-]{section*.27}{IO Optimization}{section*.23}% 26
\BOOKMARK [3][-]{section*.28}{Map Value To Int}{section*.23}% 27
\BOOKMARK [3][-]{section*.29}{Permutations}{section*.23}% 28
\BOOKMARK [3][-]{section*.30}{Print Vector}{section*.23}% 29
\BOOKMARK [3][-]{section*.31}{Priority Queue Of Object}{section*.23}% 30
\BOOKMARK [3][-]{section*.32}{Random}{section*.23}% 31
\BOOKMARK [3][-]{section*.33}{Read Line}{section*.23}% 32
\BOOKMARK [3][-]{section*.34}{Sort Pair}{section*.23}% 33
\BOOKMARK [3][-]{section*.35}{Sort Vector Of Object}{section*.23}% 34
\BOOKMARK [3][-]{section*.36}{Split String}{section*.23}% 35
\BOOKMARK [3][-]{section*.37}{Typedef}{section*.23}% 36
\BOOKMARK [2][-]{section*.38}{Python}{section*.22}% 37
\BOOKMARK [3][-]{section*.39}{Combinations}{section*.38}% 38
\BOOKMARK [3][-]{section*.40}{Fast IO}{section*.38}% 39
\BOOKMARK [3][-]{section*.41}{Permutations}{section*.38}% 40
\BOOKMARK [3][-]{section*.42}{Random}{section*.38}% 41
\BOOKMARK [3][-]{section*.43}{Sort List}{section*.38}% 42
\BOOKMARK [3][-]{section*.44}{Sort List Of Object}{section*.38}% 43
\BOOKMARK [1][-]{section*.45}{Data Structures}{}% 44
\BOOKMARK [2][-]{section*.46}{Geometry}{section*.45}% 45
\BOOKMARK [3][-]{section*.47}{K-D Tree}{section*.46}% 46
\BOOKMARK [2][-]{section*.48}{Graphs}{section*.45}% 47
\BOOKMARK [3][-]{section*.49}{UnionFind}{section*.48}% 48
\BOOKMARK [2][-]{section*.50}{Ranges}{section*.45}% 49
\BOOKMARK [3][-]{section*.51}{BIT}{section*.50}% 50
\BOOKMARK [3][-]{section*.52}{BIT Range Update}{section*.50}% 51
\BOOKMARK [3][-]{section*.53}{Segment Tree}{section*.50}% 52
\BOOKMARK [3][-]{section*.54}{Segment Tree Lazy Propagation}{section*.50}% 53
\BOOKMARK [3][-]{section*.55}{Sparse Table}{section*.50}% 54
\BOOKMARK [2][-]{section*.56}{Strings}{section*.45}% 55
\BOOKMARK [3][-]{section*.57}{Trie}{section*.56}% 56
\BOOKMARK [2][-]{section*.58}{Trees And Heaps}{section*.45}% 57
\BOOKMARK [3][-]{section*.59}{Red Black Tree}{section*.58}% 58
\BOOKMARK [3][-]{section*.60}{Treap}{section*.58}% 59
\BOOKMARK [1][-]{section*.61}{Geometry}{}% 60
\BOOKMARK [2][-]{section*.62}{Convex Hull}{section*.61}% 61
\BOOKMARK [2][-]{section*.63}{Max Interval Overlap}{section*.61}% 62
\BOOKMARK [1][-]{section*.64}{Graphs}{}% 63
\BOOKMARK [2][-]{section*.65}{Articulation Points And Bridges}{section*.64}% 64
\BOOKMARK [2][-]{section*.66}{Connected Components}{section*.64}% 65
\BOOKMARK [2][-]{section*.67}{Flood Fill}{section*.64}% 66
\BOOKMARK [2][-]{section*.68}{Heavy Light Decomposition}{section*.64}% 67
\BOOKMARK [2][-]{section*.69}{Is Bipartite}{section*.64}% 68
\BOOKMARK [2][-]{section*.70}{LCA}{section*.64}% 69
\BOOKMARK [2][-]{section*.71}{MST Kruskal}{section*.64}% 70
\BOOKMARK [2][-]{section*.72}{MST Prim}{section*.64}% 71
\BOOKMARK [2][-]{section*.73}{Strongly Connected Components}{section*.64}% 72
\BOOKMARK [2][-]{section*.74}{Topological Sort}{section*.64}% 73
\BOOKMARK [2][-]{section*.75}{Topological Sort \(All possible sorts\)}{section*.64}% 74
\BOOKMARK [2][-]{section*.76}{Cycles}{section*.64}% 75
\BOOKMARK [3][-]{section*.77}{Get All Simple Cycles}{section*.76}% 76
\BOOKMARK [3][-]{section*.78}{Get Some Cycles}{section*.76}% 77
\BOOKMARK [3][-]{section*.79}{Has Cycle}{section*.76}% 78
\BOOKMARK [2][-]{section*.80}{Flow}{section*.64}% 79
\BOOKMARK [3][-]{section*.81}{Max Flow Dinic}{section*.80}% 80
\BOOKMARK [3][-]{section*.82}{Maximum Bipartite Matching}{section*.80}% 81
\BOOKMARK [2][-]{section*.83}{ShortestPaths}{section*.64}% 82
\BOOKMARK [3][-]{section*.84}{Bellman Ford}{section*.83}% 83
\BOOKMARK [3][-]{section*.85}{Dijkstra}{section*.83}% 84
\BOOKMARK [3][-]{section*.86}{Shortest Path in Directed Acyclic Graph}{section*.83}% 85
\BOOKMARK [1][-]{section*.87}{Maths}{}% 86
\BOOKMARK [2][-]{section*.88}{Number Theory}{section*.87}% 87
\BOOKMARK [3][-]{section*.89}{Divisibility Criterion}{section*.88}% 88
\BOOKMARK [3][-]{section*.90}{Extended Euclidean}{section*.88}% 89
\BOOKMARK [3][-]{section*.91}{GCD}{section*.88}% 90
\BOOKMARK [3][-]{section*.92}{LCM}{section*.88}% 91
\BOOKMARK [3][-]{section*.93}{Prime Check Miller Rabin}{section*.88}% 92
\BOOKMARK [3][-]{section*.94}{Prime Sieve}{section*.88}% 93
\BOOKMARK [1][-]{section*.95}{Strings}{}% 94
\BOOKMARK [2][-]{section*.96}{KMP}{section*.95}% 95
\BOOKMARK [2][-]{section*.97}{Rabin Karp}{section*.95}% 96
\BOOKMARK [1][-]{section*.98}{Techniques}{}% 97
\BOOKMARK [2][-]{section*.99}{Binary Search}{section*.98}% 98
\BOOKMARK [2][-]{section*.100}{Multiple Queries}{section*.98}% 99
\BOOKMARK [3][-]{section*.101}{Mo}{section*.100}% 100
\BOOKMARK [3][-]{section*.102}{SQRT Decomposition}{section*.100}% 101
